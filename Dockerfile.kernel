#
# Copyright Â© 2019 Maestro Creativescape
#
# SPDX-License-Identifier: GPL-3.0
#
# Docker Image Builder for Android BuildSystem on Alpine Linux Edge
# Deps picked primarily from https://github.com/akhilnarang/scripts
# 
FROM alpine:edge

### Uncomment the community repository
RUN  sed -e 's;^#http\(.*\)/edge/community;http\1/edge/community;g' \
            -i /etc/apk/repositories

RUN apk update

### I have split the deps to several run steps to split the deps
### across a lot of layers. This ensures your image is pulled a
### lot faster. 

RUN apk add git \
            bc \
            ccache \
            ncurses5-libs \
            bash \
            moreutils \
            automake \
            autoconf \
            gawk \
            libtool \
            zip \
            curl \
            wget \
            gnupg \
            python3 \
            python3-dev \
            unzip \
            openjdk8 \
            pigz \
            build-base --no-cache

ARG FORCE_UNSAFE_CONFIGURE=1

RUN curl "https://ftp.gnu.org/gnu/tar/tar-latest.tar.xz" -so /root/tar-latest.tar.xz && \
    echo "Building GNU TAR from source......" && \
    cd /root && \
    tar -xf tar-latest.tar.xz && \
    cd tar-1* && \
    ./configure &> /dev/null && \
    make -j$(nproc) &> /dev/null && \
    make install &> /dev/null && \
    rm -rf /root/tar*

RUN curl https://github.com/facebook/zstd/releases/download/v1.4.4/zstd-1.4.4.tar.gz -so /root/zstd.tar.gz && \
   echo "Building ZSTD from source......" && \
    tar -xf /root/zstd.tar.gz && \
    cd /root/zstd-1.4.4 && \
    make -j8 && \
    make install && \
    rm -rf /root/zstd*

RUN curl -L "https://kdrag0n.dev/files/redirector/proton_clang-latest.tar.zst" -so /root/proton-clang.tar.zst && \
    tar -I zstd -xvf /root/proton-clang.tar.zst && \
    cd /root/proton_clang* && \
    echo $(pwd)/bin > /tmp/clang_path && \
    rm -rf /root/proton-clang.tar.zst

RUN git clone https://github.com/baalajimaestro/aarch64-maestro-linux-android -b 05022020 --depth=1 /root/gcc-10 && \
    cd /root/gcc-10 && \
    echo $(pwd)/bin > /tmp/cc_path


RUN git config --global user.name "baalajimaestro"
RUN git config --global user.email "baalajimaestro@pixelexperience.org"

CMD ["bash"]